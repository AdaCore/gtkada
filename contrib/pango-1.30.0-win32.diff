2012-05-29	Nicolas Setton  <setton@adacore.com>

	* pango/Makefile.in: Deactivate hard-coded dependency
	of Pango-1.0.gir on freetype2 libraries, which are not
	present on Windows.

	* pango/pangocairo-win32.h: Add an underscore in front of
	prototype function, so it doesn't get picked up by the
	GIR scanner.

--- pango/Makefile.in.orig	2012-05-29 15:37:20.687800000 +0200
+++ pango/Makefile.in	2012-05-29 15:38:00.233800000 +0200
@@ -1850,7 +1850,7 @@
 @HAVE_CAIRO_WIN32_TRUE@	$(AM_V_GEN) $(WINDRES) $< $@
 
 PangoCairo-1.0.gir: libpangocairo-1.0.la
-PangoCairo-1.0.gir: Pango-1.0.gir $(PANGOCAIRO_FONT_BACKEND_GI_MODULE).gir
+PangoCairo-1.0.gir: Pango-1.0.gir
 pangowin32-win32-res.o: pangowin32.rc
 	$(AM_V_GEN) $(WINDRES) $< $@
 
--- ../originals/pango-1.30.0/pango/Makefile.in	2012-05-29 15:54:02.426200000 +0200
+++ pango/Makefile.in	2012-05-29 17:47:02.326600000 +0200
@@ -656,7 +656,7 @@
 	    $(pango_headers) \
 	    pango-enum-types.h
 
-Pango_1_0_gir_PACKAGES = gobject-2.0 cairo freetype2
+Pango_1_0_gir_PACKAGES = gobject-2.0 cairo
 Pango_1_0_gir_EXPORT_PACKAGES = pango
 Pango_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0
 Pango_1_0_gir_LIBS = libpango-1.0.la
@@ -801,7 +801,7 @@
 PangoCairo_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0
 PangoCairo_1_0_gir_LIBS = libpangocairo-1.0.la
 PangoCairo_1_0_gir_CFLAGS = -I$(top_srcdir) -I$(top_builddir) $(PANGO_CFLAGS)
-PangoCairo_1_0_gir_SCANNERFLAGS = --include-uninstalled=$(builddir)/Pango-1.0.gir --include-uninstalled=$(builddir)/$(PANGOCAIRO_FONT_BACKEND_GI_MODULE).gir --c-include "pango/pangocairo.h"
+PangoCairo_1_0_gir_SCANNERFLAGS = --include-uninstalled=$(builddir)/Pango-1.0.gir --c-include "pango/pangocairo.h"
 PangoCairo_1_0_gir_FILES = $(filter-out %-private.h, $(addprefix $(srcdir)/,$(pangocairo_introspection_files)))
 libpangowin32_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) \
 	$(am__append_38)
--- ../originals/pango-1.30.0/pango/pangocairo-win32.h	2011-08-16 03:11:08.000000000 +0200
+++ pango/pangocairo-win32.h	2012-05-29 17:54:21.825400000 +0200
@@ -28,7 +28,7 @@
 
 G_BEGIN_DECLS
 
-#define PANGO_TYPE_CAIRO_WIN32_FONT_MAP       (pango_cairo_win32_font_map_get_type ())
+#define PANGO_TYPE_CAIRO_WIN32_FONT_MAP       (_pango_cairo_win32_font_map_get_type ())
 #define PANGO_CAIRO_WIN32_FONT_MAP(object)    (G_TYPE_CHECK_INSTANCE_CAST ((object), PANGO_TYPE_CAIRO_WIN32_FONT_MAP, PangoCairoWin32FontMap))
 #define PANGO_IS_CAIRO_WIN32_FONT_MAP(object) (G_TYPE_CHECK_INSTANCE_TYPE ((object), PANGO_TYPE_CAIRO_WIN32_FONT_MAP))
 
@@ -41,7 +41,7 @@
   double dpi;
 };
 
-GType pango_cairo_win32_font_map_get_type (void) G_GNUC_CONST;
+GType _pango_cairo_win32_font_map_get_type (void) G_GNUC_CONST;
 
 PangoFont *_pango_cairo_win32_font_new (PangoCairoWin32FontMap       *cwfontmap,
 					PangoContext                 *context,
