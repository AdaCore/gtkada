2012-11-26	Nicolas Roche	<roche@adacore.com>

	* giscanner/scannerlexer.l: Add support for __inline__,
	__asm__ __volatile__, __volatile__, and __restrict__,
	present in mingw64 headers.

2012-11-22	Nicolas Setton	<setton@adacore.com>

	* giscanner/dumper.py: Fix use of "export all symbols" mode
	under Windows.

2012-05-29	Nicolas Setton  <setton@adacore.com>

	* giscanner/utils.py: Port to Windows a local hack.

	* giscanner/dumper.py: The extension is '.exe', not 'exe'.
	Add workaround against wrong library additions on the link
	line.

	* giscanner/giscannermodule.c: our base python is 2.7, which
	uses msvcr90.dll rather than msvcr71.dll.

	* giscanner/shlibs.py: os.uname does not exist in Python 2.7,
	do not use it, deactivate FreeBSD.

	* giscanner/scannermain.py: Fix detection of Windows.

--- giscanner/utils.py.orig	2012-05-28 12:24:25.395400000 +0200
+++ giscanner/utils.py	2012-05-28 12:24:48.171400000 +0200
@@ -99,6 +99,7 @@
     #        in a way which is compatible with both libtool 2.2
     #        and pre-2.2. Johan 2008-10-21
     libname = libname.replace('.libs/.libs', '.libs')
+    libname = libname.replace('.libs\.libs', '.libs')
     return libname
 
 # Returns arguments for invoking libtool, if applicable, otherwise None
--- ../gobject-introspection-1.36.0-orig/giscanner/dumper.py	2013-02-23 11:40:08.000000000 +0100
+++ giscanner/dumper.py	2013-05-15 18:14:59.157657519 +0200
@@ -258,7 +258,7 @@
             args.extend(['-o', output])
         if libtool:
             if os.name == 'nt':
-                args.append('-export-all-symbols')
+                args.append('-Wl,--export-all-symbols')
             else:
                 args.append('-export-dynamic')
 
@@ -289,6 +289,7 @@
                 subprocess.list2cmdline(args), )
             sys.stdout.flush()
         try:
+            args = [a.replace('\\', '/').replace('/bin/bash', 'c:/cygwin/bin/bash') for a in args]
             subprocess.check_call(args)
         except subprocess.CalledProcessError, e:
             raise LinkerError(e)
@@ -326,7 +327,8 @@
                 if library.endswith(".la"): # explicitly specified libtool library
                     args.append(library)
                 else:
-                    args.append('-l' + library)
+                    if not library.startswith('lib'):
+                        args.append('-l' + library)
 
         for library_path in self._options.library_paths:
             # Not used/needed on Visual C++, and -Wl,-rpath options
--- giscanner/scannermain.py.orig	2012-05-29 13:58:49.301800000 +0200
+++ giscanner/scannermain.py	2012-05-29 13:59:07.616200000 +0200
@@ -162,7 +162,7 @@
     group = get_preprocessor_option_group(parser)
     parser.add_option_group(group)
 
-    if os.environ.get('MSYSTEM') == 'MINGW32':
+    if True:
         group = get_windows_option_group(parser)
         parser.add_option_group(group)
 
--- giscanner/scannerlexer.l	2012-04-17 20:24:58.000000000 +0200
+++ ../gobject-introspection-1.32.1-good/giscanner/scannerlexer.l	2012-11-23 15:34:48.774600000 +0100
@@ -135,16 +135,21 @@
 "->"					{ return ARROW; }
 
 "__asm" 	        	        { if (!parse_ignored_macro()) REJECT; }
+"__asm__ __volatile__" 	        	        { if (!parse_ignored_macro()) REJECT; }
 "__asm__" 	        	        { if (!parse_ignored_macro()) REJECT; }
 "__attribute__" 		        { if (!parse_ignored_macro()) REJECT; }
 "__attribute" 		                { if (!parse_ignored_macro()) REJECT; }
 "__const"                               { return CONST; }
 "__extension__"                         { return EXTENSION; }
 "__inline"				{ return INLINE; }
+"__inline__"                            { return INLINE; }
 "__nonnull" 			        { if (!parse_ignored_macro()) REJECT; }
 "__signed__"				{ return SIGNED; }
 "__restrict"				{ return RESTRICT; }
+"__restrict__"                          { return RESTRICT; }
 "__typeof"				{ if (!parse_ignored_macro()) REJECT; }
+
+"__volatile__"                          { return VOLATILE; }
 "_Bool"					{ return BOOL; }
 
 [a-zA-Z_][a-zA-Z_0-9]*			{ if (scanner->macro_scan) return IDENTIFIER; else REJECT; }
