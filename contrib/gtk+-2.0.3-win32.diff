# This is a patch against Gtk+ 2.0.3 sources that fixes Windows specific
# problems.

####################################################################################
#
####################################################################################
# Problems already included in the Gtk+ CVS:


#########################################
# Memory Leak (one of many)

 --- gtk+-2.0.3/gdk/win32/save/gdkgc-win32.c  Tue May 28 17:40:42 2002
 +++ gtk+-2.0.3/gdk/win32/gdkgc-win32.c       Wed May 29 14:45:33 2002
 @@ -1010,6 +1010,13 @@
         }
        if ((hrgn = ExtCreateRegion (NULL, nbytes, rgndata)) == NULL)
         WIN32_API_FAILED ("ExtCreateRegion"), ok = FALSE;
 +
 +
 +      /* fduguet : the rgndata should now be freed since the region
 +       * has been created and put in hrgn !!! */
 +      if (rgndata)
 +        g_free (rgndata) ;
 +

        /*
         * XXX: combine the fillmode-stipple with the clip region possibly




####################################################################################
#
####################################################################################
# Problems not included in CVS:



#########################################
# Ctrl-C
#########################################

--- gtk+-2.0.3/gdk/win32/save/gdkevents-win32.c      Tue Jun  4 19:31:17 2002
+++ gtk+-2.0.3/gdk/win32/gdkevents-win32.c   Wed Jun  5 11:08:12 2002
@@ -886,6 +886,11 @@
 static guint
 vk_from_char (guint c)
 {
+  /* fduguet */
+  if ((c >= 1) && (c <=26))
+    {
+      return (c - 1 + 'A') ;
+    }
   switch (c)
     {
     case '\b':


#########################################
# always on top
#########################################

--- gtk+-2.0.3/gdk/win32/save/gdkwindow-win32.c      Fri May 31 12:18:44 2002
+++ gtk+-2.0.3/gdk/win32/gdkwindow-win32.c   Wed Jun  5 15:51:34 2002
@@ -1519,7 +1516,9 @@
   if (!SetParent (window_id, parent_id))
        WIN32_API_FAILED ("SetParent");
 #else /* make the modal window topmost instead */
-  if (!SetWindowPos (window_id, HWND_TOPMOST, 0, 0, 0, 0,
+  if (!SetWindowPos (window_id, HWND_NOTOPMOST, 0, 0, 0, 0,
                      SWP_NOMOVE | SWP_NOSIZE))
     WIN32_API_FAILED ("SetWindowPos");
 #endif



#########################################
# copy-paste
#########################################

--- gtk+-2.0.3/gdk/win32/save/gdkproperty-win32.c    Wed Jun  5 18:26:32 2002
+++ gtk+-2.0.3/gdk/win32/gdkproperty-win32.c  Wed Jun  5 18:25:56 2002
@@ -390,7 +390,7 @@
          cf = CF_TEXT;
          for (i = 0; i < nelements; i++)
            {
-             if (*data == '\n')
+             if (data[i] == '\n')
                *ucptr++ = '\r';
              *ucptr++ = data[i];
            }



#########################################
# boxes display (e.g. tab characters)
#########################################

--- pango-1.0.2/pango/save/pangowin32.c   Thu Jun  6 11:27:34 2002
+++ pango-1.0.2/pango/pangowin32.c        Thu Jun  6 14:07:58 2002
@@ -240,7 +240,7 @@
 {
   HFONT old_hfont = NULL;
   HFONT hfont;
-  int i;
+  int i, idx ;
   guint16 *glyph_indexes;
   INT *dX;

@@ -255,16 +255,23 @@
   glyph_indexes = g_new (guint16, glyphs->num_glyphs);
   dX = g_new (INT, glyphs->num_glyphs);

+  idx = 0 ;
   for (i = 0; i <glyphs->num_glyphs; i++)
     {
-      glyph_indexes[i] = glyphs->glyphs[i].glyph;
-      dX[i] = glyphs->glyphs[i].geometry.width / PANGO_SCALE;
+      /* fduguet : skips the zero glyphs */
+      if (glyphs->glyphs[i].glyph != 0)
+        {
+          /* glyph is handeled */
+          glyph_indexes[idx] = glyphs->glyphs[i].glyph ;
+          dX[idx] = glyphs->glyphs[i].geometry.width / PANGO_SCALE ;
+          ++idx ;
+        }
     }

   ExtTextOutW (hdc, x, y,
               ETO_GLYPH_INDEX,
               NULL,
-              glyph_indexes, glyphs->num_glyphs,
+              glyph_indexes, idx,
               dX);

   SelectObject (hdc, old_hfont); /* restore */
