2013-09-05	Nicolas Setton  <setton@adacore.com>

	* gdk/quartz/gdkkeys-quartz.c: Workaround against passing a null
	pointer to g_signal_emit_by_name.

	Status: probably will be fixed quickly in Gtk+.

2013-07-23      Jerome Lambourg <lambourg@adacore.com>

        * gtk/gtkrange.c, gtk/gtkscrolledwindow.c: Better handle smooth scrolls.

2013-07-23      Jerome Lambourg <lambourg@adacore.com>

        * gdk/quartz/gdkscreen-quartz.c: Fix warning on obsolete
          userSpaceScaleFactor

--- gdk/quartz/gdkwindow-quartz.c.old	2012-08-06 15:33:18.000000000 +0200
+++ gdk/quartz/gdkwindow-quartz.c	2012-08-06 15:40:51.000000000 +0200
@@ -861,10 +861,11 @@
     {
       NSRect rect = [[screens objectAtIndex:i] frame];

+      screen = [screens objectAtIndex:i];
+
       if (x >= rect.origin.x && x <= rect.origin.x + rect.size.width &&
           y >= rect.origin.y && y <= rect.origin.y + rect.size.height)
         {
-          screen = [screens objectAtIndex:i];
           break;
         }
     }
--- gtk/gtkrange.c.old	2013-07-22 13:26:18.000000000 +0200
+++ gtk/gtkrange.c	2013-07-22 14:19:21.000000000 +0200
@@ -2842,7 +2842,9 @@
   page_size = gtk_adjustment_get_page_size (adjustment);
   page_increment = gtk_adjustment_get_page_increment (adjustment);

-  if (GTK_IS_SCROLLBAR (range))
+  if (event->direction == GDK_SCROLL_SMOOTH)
+    scroll_unit = 1.0;
+  else if (GTK_IS_SCROLLBAR (range))
     scroll_unit = pow (page_size, 2.0 / 3.0);
   else
     scroll_unit = page_increment;
--- gtk/gtkscrolledwindow.c.old	2013-07-22 13:26:18.000000000 +0200
+++ gtk/gtkscrolledwindow.c	2013-07-22 14:19:56.000000000 +0200
@@ -2279,7 +2279,10 @@

           adj = gtk_range_get_adjustment (GTK_RANGE (priv->hscrollbar));
           page_size = gtk_adjustment_get_page_size (adj);
-          scroll_unit = pow (page_size, 2.0 / 3.0);
+          if (event->direction == GDK_SCROLL_SMOOTH)
+            scroll_unit = 1.0;
+          else
+            scroll_unit = pow (page_size, 2.0 / 3.0);

           new_value = CLAMP (gtk_adjustment_get_value (adj) + delta_x * scroll_unit,
                              gtk_adjustment_get_lower (adj),
@@ -2301,7 +2304,10 @@

           adj = gtk_range_get_adjustment (GTK_RANGE (priv->vscrollbar));
           page_size = gtk_adjustment_get_page_size (adj);
-          scroll_unit = pow (page_size, 2.0 / 3.0);
+          if (event->direction == GDK_SCROLL_SMOOTH)
+            scroll_unit = 1.0;
+          else
+            scroll_unit = pow (page_size, 2.0 / 3.0);

           new_value = CLAMP (gtk_adjustment_get_value (adj) + delta_y * scroll_unit,
                              gtk_adjustment_get_lower (adj),
--- gdk/quartz/gdkscreen-quartz.c.old	2013-07-22 13:26:18.000000000 +0200
+++ gdk/quartz/gdkscreen-quartz.c	2013-07-22 14:18:21.000000000 +0200
@@ -73,10 +73,12 @@
 {
   GdkScreen *screen = GDK_SCREEN (quartz_screen);
   NSScreen *nsscreen;
+  NSRect windowRes = NSMakeRect (0, 0, 72, 72);
+  NSRect screenRes;

   nsscreen = [[NSScreen screens] objectAtIndex:0];
-  gdk_screen_set_resolution (screen,
-                             72.0 * [nsscreen userSpaceScaleFactor]);
+  screenRes = [nsscreen convertRectToBacking:windowRes];
+  gdk_screen_set_resolution (screen, (gdouble)screenRes.size.width);

   gdk_quartz_screen_calculate_layout (quartz_screen);

@@ -331,7 +333,11 @@
    * and 25.4 is the number of millimeters per inch.
    */
 #if MAC_OS_X_VERSION_MAX_ALLOWED > MAC_OS_X_VERSION_10_3
-  float dpi = [screen userSpaceScaleFactor] * 72.0;
+  NSRect windowRes = NSMakeRect (0, 0, 72, 72);
+  NSRect screenRes;
+
+  screenRes = [screen convertRectToBacking:windowRes];
+  float dpi = (gdouble)screenRes.size.width;
 #else
   float dpi = 96.0 / 72.0;
 #endif
--- gdk/quartz/gdkkeys-quartz.c.orig	2013-09-04 19:58:33.000000000 +0200
+++ gdk/quartz/gdkkeys-quartz.c	2013-09-04 20:10:21.000000000 +0200
@@ -492,7 +492,8 @@
         p[0] = known_numeric_keys[i].keypad_keyval;
     }
 
-  g_signal_emit_by_name (default_keymap, "keys-changed");
+  if (default_keymap)
+    g_signal_emit_by_name (default_keymap, "keys-changed");
 }
 
 static PangoDirection
