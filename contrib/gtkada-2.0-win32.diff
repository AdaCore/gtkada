Tue Jul  9 11:48:58 2002  Arnaud Charlet  <charlet@gnat.com>

	* gdk-window.adb: Remove reference to gdk_window_get_decorations since
	it is undefined under Windows.

	* glib-values.ads, glib-values.adb: Fix definition of GValue to
	conform to ms bitfields packing under Windows.

*** gdk-window.adb.old	Thu Apr 25 18:07:10 2002
--- gdk-window.adb	Thu Apr 25 18:07:50 2002
***************
*** 118,136 ****
        Decorations : out Gdk_Wm_Decoration;
        Success     : out Boolean)
     is
!       function Internal
!         (Window      : Gdk_Window;
!          Decorations : access Gdk_Wm_Decoration) return Gboolean;
!       pragma Import (C, Internal, "gdk_window_get_decorations");
! 
!       Tmp : aliased Gdk_Wm_Decoration;
! 
     begin
!       Success := To_Boolean (Internal (Window, Tmp'Access));
! 
!       if Success then
!          Decorations := Tmp;
!       end if;
     end Get_Decorations;
  
     ------------------------------
--- 118,128 ----
        Decorations : out Gdk_Wm_Decoration;
        Success     : out Boolean)
     is
!       pragma Warnings (Off, Window);
!       pragma Warnings (Off, Decorations);
!       pragma Warnings (Off, Window);
     begin
!       Success := False;
     end Get_Decorations;
  
     ------------------------------
*** glib-values.ads.old	Thu Apr 25 18:06:56 2002
--- glib-values.ads	Thu Apr 25 18:08:00 2002
***************
*** 136,146 ****
     --  also provided inside Gtk.Text_Iter.
  
  private
!    type GValue_Data is array (1 .. 2) of Guint64;
!    type GValue is record
!       g_type : GType;
!       data   : GValue_Data;
!    end record;
     pragma Convention (C, GValue);
  
     type GValues is record
--- 136,142 ----
     --  also provided inside Gtk.Text_Iter.
  
  private
!    type GValue is array (1 .. 24) of Gint8;
     pragma Convention (C, GValue);
  
     type GValues is record
*** glib-values.adb.old	Thu Apr 25 18:07:01 2002
--- glib-values.adb	Thu Apr 25 18:08:06 2002
***************
*** 151,157 ****
        procedure Internal (Value : in out GValue; G_Type : Glib.GType);
        pragma Import (C, Internal, "g_value_init");
     begin
!       Value := (g_type => 0, data => (others => 0));
        Internal (Value, G_Type);
     end Init;
  
--- 151,157 ----
        procedure Internal (Value : in out GValue; G_Type : Glib.GType);
        pragma Import (C, Internal, "g_value_init");
     begin
!       Value := (others => 0);
        Internal (Value, G_Type);
     end Init;
  
