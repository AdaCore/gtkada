AC_INIT(gtkada,3.8.3,report@adacore.com,gtkada)
AC_CANONICAL_SYSTEM

TARGET=""
if test x$host != x$target ; then
   TARGET=${target}
fi
AC_SUBST(TARGET)

AM_ADD_OS_SPECIFIC_FLAGS

# checking for local tools
AC_PROG_CC
AC_PROG_OBJC(clang gcc CC)
AM_PATH_GNAT
AM_PATH_PERL
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_RANLIB

CHECK_BUILD_TYPE     # are we in devel mode ?

# Gettext stuff
ALL_LINGUAS="en"
AM_GNU_GETTEXT([external])

# checking for gtk
AM_PATH_GTK(3.8.3)

# Should we compile with gtkextra ?
AC_MSG_CHECKING(for gtkextra)
AC_ARG_ENABLE(gtkextra,
  [AC_HELP_STRING(
    [--enable-gtkextra],
    [Build the gtkextra widgets])],
  HAVE_GTKEXTRA=$enableval,
  HAVE_GTKEXTRA=no)
AC_MSG_RESULT($HAVE_GTKEXTRA)
AC_SUBST(HAVE_GTKEXTRA)

# try to find OpenGL if present
AM_CHECK_OPENGL

EXEC_PREFIX="$prefix"
AC_SUBST(EXEC_PREFIX)

# Ignore user's choice of libdir, as well as configure's own default,
# because we want GtkAda to always install in /lib (backward compatibility)

libdir='${prefix}/lib'

AC_OUTPUT(Makefile shared.gpr src/tools/gtkada-config projects/Makefile docs/Makefile docs/gtkada_rm/Makefile po/Makefile src/config.h projects/gtkada.gpr projects/gtkada_gl.gpr projects/gtkada.pc projects/gtkada_install_dynamic.gpr projects/gtkada_install_dynamic_gl.gpr)

AC_MSG_NOTICE([--------- Summary for Gtkada $PACKAGE_VERSION -----------------])
AC_MSG_NOTICE(AC_HELP_STRING(
              [Shared libraries:],[$CAN_BUILD_SHARED (default: $DEFAULT_LIBRARY_TYPE)]))
AC_MSG_NOTICE(AC_HELP_STRING([OpenGL:],[$HAVE_OPENGL]))
AC_MSG_NOTICE([--------------------------------------------])
