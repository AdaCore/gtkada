SHELL = /bin/sh
@SET_MAKE@

.SUFFIXES:
.SUFFIXES: .c .o .ads .adb .ali

.PHONY:
.PHONY: clean-generic mostlyclean-generic \
	clean distclean mostlyclean maintainer-clean \
	force

target = testgtk

CC = @CC@
CFLAGS = @CFLAGS@ -Wall
ALL_CFLAGS = $(CFLAGS) -I../

#MALLOC_FLAGS= ../debug/wrap.o -Wl,--wrap=malloc -Wl,--wrap=free -Wl,--wrap=strdup
MALLOC_FLAGS=

GTKADA_CONFIG=gtkadaconfig
GNATCC = gcc
GNATFLAGS = -O2 -gnata

GNATMAKE = gnatmake
GNATMAKEFLAGS = $(GNATFLAGS)
GNATMAKELDFLAGS = -largs -L.. @GTK_LIBS@ -lgtkada
GNATMAKELDFLAGS_STATIC =  -largs $(MALLOC_FLAGS) -L.. \
	@GTK_PREFIX@/lib/libgtk.a @GTK_PREFIX@/lib/libglib.a ../libgtkada.a \
	`echo '@GTK_LIBS@' | sed 's/-lglib//' | sed 's/-lgtk//'`

all: $(target)

$(target): *.ad[sb]
	@echo "-------------------------------------"
	@echo $(GNATMAKE) $(GNATFLAGS) $(target) '`'$(GTKADA_CONFIG)'`'
	@echo "-------------------------------------"
	@if [ -f ../.devel ]; then \
	   $(GNATMAKE) $(GNATFLAGS) $(target) -g -aO../lib-obj $(ALL_CFLAGS) -largs $(GNATMAKELDFLAGS); \
	else \
	   $(GNATMAKE) $(GNATFLAGS) $(target) $(ALL_CFLAGS) -largs $(GNATMAKELDFLAGS); \
	fi

static: force
	$(RM) $(target)
	@if [ -f ../.devel ]; then \
	  $(GNATMAKE) $(GNATMAKEFLAGS) $(target) -g -I../ -I../lib-obj -largs $(MALLOC_FLAGS) $(GNATMAKELDFLAGS_STATIC); \
	else \
	  $(GNATMAKE) $(GNATMAKEFLAGS) $(target) -I../ -largs $(MALLOC_FLAGS) $(GNATMAKELDFLAGS_STATIC); \
	fi


install:
	@echo "Nothing to do --  just run the ./testgtk program"

clean:
	-${RM} *.o *.ali *~ testgtk b_testgtk.c core
	-${RM} .\#*

distclean: clean
	-${RM} Makefile

mostlyclean: clean
	-${RM} Makefile

maintainer-clean: clean
	-${RM} Makefile


.adb.o:
	$(CC) -c $(GNATFLAGS) $<
.ads.o:
	$(CC) -c $(GNATFLAGS) $<

force:

