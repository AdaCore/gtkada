SHELL = /bin/sh

.SUFFIXES:
.SUFFIXES: .c .o .ads .adb .ali

.PHONY:
.PHONY: clean distclean mostlyclean maintainer-clean

@SET_MAKE@

target = testgtk

CC = gcc
CFLAGS = -O2 -g -Wall

ALL_CFLAGS = $(CFLAGS) -I../

GTKADA_CONFIG=gtkadaconfig
GNATCC = gcc
GNATFLAGS = -g

GNATMAKE = gnatmake
GNATMAKEFLAGS = $(GNATFLAGS)
GNATMAKELDFLAGS = `gtk-config --libs` -L.. -lgtkada
GNATMAKELDFLAGS_STATIC =  ../libgtkada.a `gtk-config --prefix`/lib/libgtk.a \
   `gtk-config --prefix`/lib/libglib.a \
   `gtk-config --libs | sed 's/-lglib//' | sed 's/-lgtk//'`
#MALLOC_FLAGS= ../debug/wrap.o -Wl,--wrap=malloc -Wl,--wrap=free -Wl,--wrap=strdup
MALLOC_FLAGS=


all: $(target)

$(target): ../*.ad[sb] *.ad[sb]
	@echo "-------------------------------------"
	@echo $(GNATMAKE) $(GNATFLAGS) $(target) '`'$(GTKADA_CONFIG)'`'
	@echo "-------------------------------------"
	if [ -f ../.devel ]; then \
	   $(GNATMAKE) $(GNATFLAGS) $(target) -aO../lib-obj $(ALL_CFLAGS) -largs $(GNATMAKELDFLAGS); \
	else \
	   $(GNATMAKE) $(GNATFLAGS) $(target) $(ALL_CFLAGS) -largs $(GNATMAKELDFLAGS); \
	fi

static: force
	$(RM) $(target)
	@if [ -f ../.devel ]; then \
	  $(GNATMAKE) $(GNATMAKEFLAGS) $(target) -g -I../ -I../lib-obj -largs $(MALLOC_FLAGS) $(GNATMAKELDFLAGS_STATIC); \
	else \
	  $(GNATMAKE) $(GNATMAKEFLAGS) $(target) -g -I../ -largs $(MALLOC_FLAGS) $(GNATMAKELDFLAGS_STATIC); \
	fi


install:
	@echo "Nothing to do --  just run the ./testgtk program"

clean:
	-${RM} *.o *.ali *~ testgtk b_testgtk.c core
	-${RM} .\#*

distclean: clean

mostlyclean: clean

maintainer-clean: clean


.adb.o:
	$(CC) -c $(GNATFLAGS) $<
.ads.o:
	$(CC) -c $(GNATFLAGS) $<

force: