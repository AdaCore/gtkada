Known problems fixed in GtkAda 17.0

- OB27-029 GtkProgressBar CSS styling not working

  Problem:    The -GtkProgressBar-min-horizontal-bar-height and
              -GtkProgressBar-min-vertical-bar-width CSS properties are not
              taken into account with Gtk 3.14 version. Hard-coded default
              values are used instead to define the progress bar's size, making
              it thin by default.

  Workaround: None known.

- OC10-015 Memory leaks in *_foreach

  Problem:    In some cases, gtk+ functions accept some user data, but do not
              provide a way to know when it can be freed. This resulted in
              memory leaks. In some cases, we could fix the binding by freeing
              the no-longer needed user data. However, some functions no
              longer have a binding, since that would always lead to memory
              leaks. Here is the full list:
                 gtk.accel_group.find_user_data
                 gtk.builder.connect_signals_full_user_data
                 gtk.clipboard.request_contents_user_data
                 gtk.clipboard.request_image_user_data
                 gtk.clipboard.request_rich_test_user_data
                 gtk.clipboard.request_targets_user_data
                 gtk.clipboard.request_text_user_data
                 gtk.clipboard.request_uris_user_data
                 gtk.main.key_snooper_install_user_data
                 pango.attributes.filter_user_data

  Workaround: If you were using these functions, consider storing the user
              data in a new tagged type derived from the widget. Most of the
              time this should be applicable.

- OB19-053 Wrong binding for Gtk.Tree_Store.Remove
  Problem:    The binding for this function set Iter to null, instead of
              setting it to a valid iter.
  Workaround: None known.

Known problems fixed in GtkAda 3.8.2

- N326-016 Implementing an interface raises gtk+ warnings
  Problem:    When you create custom widgets that implement an interface, for
              instance GtkScrollable, and add properties, gtk+ complains that
              you are modifying a class that has already been created.

  Workaround: The fix involves making sure that when a new GType is created
              for your custom widget (via Glib.Objects.Initialize_Class_Record)
              then the class itself is not necessarily created immediately.
              Unfortunately, this results in a backward incompatibility in the
              profile of Gtk.Widget.Set_Default_*_Handler. If you are using
              these function, you will need to pass a Class_Init parameter to
              Initialize_Class_Record, and override the default handlers in
              that function. See the example in glib-object.ads

- MA02-035 Bad binding of glib's g_strfree_v
  Problem:    The chars_ptr_array access was defined as "in out" which resulted 
              in it being passed by reference by the GNAT compiler, and 
              resulted in memory corruption (glib trying to free wrong memory 
              adresses)
  Workaround: Pass the parameter as in

- M625-039 Redraw problems under Windows
  Problem:    Some items (like tree view expanders, buttons in toolbars)
              are not drawn or refreshed properly.
  Workaround: None known.

Known problems fixed in GtkAda 3.4.2

- M212-027 Link errors under Windows
  Problem:    When linking a GtkAda program under Windows, an error is raised
              about a missing -lgtk-win32-3.0/-lgdk-win32-3.0
  Workaround: In the directory <gtkada_install_dir>\lib\, copy
              libgdk-3.dll.a and libgtk-3.dll.a respectively to
              libgdk-win32-3.0.dll.a and libgtk-win32-3.0.dll.a. 
              And in the directory <gtkada_install_dir>\bin, copy
              libgdk-3.dll and libgtk-3.dll respectively to 
              libgdk-win32-3.0.dll and libgtk-win32-3.0.dll.

Known problems fixed in GtkAda 3.4.0

- M617-010 Incorrect binding for Gtk.Widget.Add_Accelerator
  Problem:    The type for Key is incorrect
  Workaround: Replace the type with Gdk_Key_Type

- M110-027 Incorrect binding for Gtk.Tree_Selection.Get_Selected
  Problem:    The new implementation for this function is not backward
              compatible, and when there is no actual selection will return
              uninitialized values.
  Workaround: Use Gtk.Tree_Selection.Count_Selected_Rows to verify that there
              is indeed a selection before calling Get_Selected.

- L615-005 Constraint Error using the GtkAda.Canvas
  Problem:    The GtkAda.Canvas might raise a Constraint_Error when moving
              the mouse and a button has never been pressed.
  Workaround: None known.

Known problems fixed in GtkAda 2.24.2

- K726-004 Support for dead keys under Windows
  Problem:    Under windows, the dead keys for acute accent and diaeresis,
              followed by a space, should produce respectively an apostrophe
              and double quotes.
  Workaround: No known workaround.

Known problems fixed in GtkAda 2.24.2

- KA07-026 Text alignment in Gtk_Plot_Canvas
  Problem:    Under Windows, when displaying text in a Gtk_Plot_Canvas,
              the base line for digits is not aligned with the base line for
              text.
  Workaround: No known workaround.

Known problems fixed in GtkAda 2.24.0

- K726-004 Support for dead keys under Windows
  Problem:    Under windows, the dead keys for acute accent and diaeresis,
              followed by a space, should produce respectively an apostrophe
              and double quotes.
  Workaround: No known workaround.

- K718-021 X11 resources leak in Gtk.Extra.Plot
  Problem:    The Gtk_Plot widget causes X11 resources leak every time
              the plot size is changed or the axis are modified.
  Workaround: No known workaround.

Known problems fixed in GtkAda 2.22.0

- JC10-011 Gtkada.MDI gives focus when raising a window
  Problem:    When selecting a floating window via the /Window
              menu, there were a number of cases where the window was
              not properly raised (depending on your window manager and
              system). The MDI will now additionally give the text focus
              to that window.
  Workaround: Call Raise_Child manually to make sure the window was raised

- JC09-041 Gtk.Widget.Get_Snapshot fails and causes crashes
  Problem:    Calling Gtk.Widget.Get_Snapshot causes memory corruption and
              potentially crashes.
  Workaround: Fix the binding to Get_Snapshot: parameter Clip_Rect should be
              a Gdk.Rectangle.Gdk_Rectangle_Access rather than 
              a Gtk.Rectangle.Gdk_Rectangle.
