SHELL=/bin/sh
@SET_MAKE@

.SUFFIXES:
.SUFFIXES: .c .o .ads .adb .ali

.PHONY:
.PHONY: clean-generic mostlyclean-generic \
	clean distclean mostlyclean maintainer-clean

include Makefile.common

MAKE_ADB = make
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

CFLAGS = @CFLAGS@ -Wall @GTK_CFLAGS@ -I.. $(FPIC)

GNATMAKEBINDFLAGS =
GNATMAKELDFLAGS = -largs -L. -lgtkada @GTK_LIBS@

LIB_DIR=lib-obj

CD = cd
MKDIR = mkdir -p
RMDIR = rmdir
MV = mv

SONAME        = libgtkada.so
LIBNAME       = libgtkada.so
ARCHIVENAME   = libgtkada.a

GTKADA_CONFIG = gtkada-config
GATE_SRC      = gate.adb
GATE_EX       = gate-in.exe
GATE          = gate
DGATE         = dgate

c_objects = $(LIB_DIR)/misc.o $(LIB_DIR)/misc_extra.o
c_extra_objects = gtkextra/gtk*.o

## General and public targets

all: dirs libs gates

libs: extra $(LIBNAME) $(ARCHIVENAME) opengl install_ali

opengl: force
	$(MAKE) -C opengl

extra: force
	$(MAKE) -C gtkextra

gates: $(GATE_EX) $(DGATE)

## Private targets

dirs:: force
	-$(MKDIR) $(LIB_DIR)
	-$(CHMOD) +x $(GATE) $(GTKADA_CONFIG)

$(LIBNAME):: $(LIB_DIR)/$(MAKE_ADB).o ${wildcard ${LIB_DIR}/*.o} $(c_objects)
	$(CC) -shared -fPIC $(OS_SPECIFIC_LINK_OPTIONS) -o $(LIBNAME) $(LIB_DIR)/glib*.o $(LIB_DIR)/gdk*.o $(LIB_DIR)/gtk*.o $(c_objects) $(c_extra_objects) @GTK_LIBS@ -lm
	-@if [ ! -f .devel ]; then \
	  strip $(LIBNAME); \
	fi

$(ARCHIVENAME):: $(LIB_DIR)/$(MAKE_ADB).o ${wildcard ${LIB_DIR}/*.o} $(c_objects)
	$(AR) $(ARFLAGS) $(ARCHIVENAME) $(LIB_DIR)/glib*.o $(LIB_DIR)/gdk*.o $(LIB_DIR)/gtk*.o $(c_objects) $(c_extra_objects)
	if [ -f /usr/bin/$(RANLIB) -o -f /bin/$(RANLIB) ]; then \
	  $(RANLIB) $(ARCHIVENAME); \
	fi

# This copies the .ali files from lib_obj/ to the current directory, and change
# the permission of the files so that dgate, gate and testgtk use the dynamic
# library. We do not do this if .devel exists, so that gnatmake will still
# rebuild the files (it does not check anything if the .ali files are read-only.
install_ali::
	test -f .devel || $(CP) $(LIB_DIR)/*.ali .
	test -f .devel || $(CHMOD) -w glib*.ali gdk*.ali gtk*.ali

$(GATE_EX):: $(GATE_SRC) $(LIBNAME)
	@if [ -f .devel ]; then \
	  $(GNATMAKE) -aO$(LIB_DIR) $(GNATFLAGS_DEVEL) -o $(GATE_EX) $(GATE_SRC) $(GNATMAKEBINDFLAGS) $(GNATMAKELDFLAGS); \
	else \
	  $(GNATMAKE) $(GNATFLAGS) -o $(GATE_EX) $(GATE_SRC) $(GNATMAKEBINDFLAGS) $(GNATMAKELDFLAGS); \
	fi

$(DGATE):: $(DGATE).adb $(LIBNAME)
	@if [ -f .devel ]; then \
	   $(GNATMAKE) -aO$(LIB_DIR) $(GNATFLAGS_DEVEL) $(DGATE) $(GNATMAKEBINDFLAGS) $(GNATMAKELDFLAGS); \
	else \
	   $(GNATMAKE) $(GNATFLAGS) $(DGATE) $(GNATMAKEBINDFLAGS) $(GNATMAKELDFLAGS); \
	fi

$(LIB_DIR)/$(MAKE_ADB).o::
	@if [ -f .devel ]; then \
	  $(CD) $(LIB_DIR); \
	  $(GNATMAKE) -c ../$(MAKE_ADB) $(GNATFLAGS_DEVEL) $(FPIC); \
	else \
	  $(CD) $(LIB_DIR); \
	  $(GNATMAKE) -c ../$(MAKE_ADB) $(GNATFLAGS) $(FPIC); \
	fi

install: all
	@if [ "$(prefix)" != `pwd` ]; then \
	   echo Installing GtkAda in $(prefix); \
	   $(MKDIR) $(bindir); \
	   $(MKDIR) $(libdir); \
	   $(MKDIR) $(incdir); \
	   $(MKDIR) $(alidir); \
	   $(INSTALL_DATA) $(ARCHIVENAME) $(libdir); \
	   $(INSTALL_DATA) $(LIBNAME) $(libdir); \
	   $(CP) glib*.ads glib*.adb $(MESA_SPECS) $(incdir); \
	   $(CP) gdk*.ads gdk*.adb $(incdir); \
	   $(CP) gtk*.ads gtk*.adb $(incdir); \
	   $(CP) $(LIB_DIR)/glib*.ali $(LIB_DIR)/gdk*.ali $(LIB_DIR)/gtk*.ali $(alidir); \
	   $(CHMOD) -w $(alidir)/*.ali; \
	   $(INSTALL_PROGRAM) $(GTKADA_CONFIG) $(bindir); \
           $(INSTALL_PROGRAM) $(GATE) $(bindir); \
           $(INSTALL_PROGRAM) $(GATE_EX) $(bindir); \
           $(INSTALL_PROGRAM) $(DGATE) $(bindir); \
           $(MAKE) -C opengl install; \
	fi
	@echo '------------------------------------------------------------------'
	@echo '--  GtkAda has now been installed.                              --'
	@echo '--  To be able to use the library, you may need to update your  --'
	@echo '--  LD_LIBRARY_PATH or to run ldconfig. You may also need to    --'
	@echo '--  update your PATH to include gtkada-config in it.            --'
	@echo '------------------------------------------------------------------'

opengl-install:
	$(MAKE) -C opengl install

clean-generic:
	-${RM} *.o *.ali *~ b_*.c b~*.ad? core
	-$(RM) $(LIB_DIR)/*
	-${RM} $(ARCHIVENAME) $(LIBNAME)
	-${RM} $(GATE_EX) $(DGATE)
	-${RM} .\#*

mostlyclean-generic: clean-generic
	-${RM} Makefile
	-${RM} $(GATE)
	-${RM} $(GTKADA_CONFIG)

clean: clean-generic
	$(MAKE) -C gtkextra clean
	$(MAKE) -C opengl clean

distclean: mostlyclean-generic
	$(MAKE) -C gtkextra distclean
	$(MAKE) -C opengl distclean

mostlyclean: mostlyclean-generic
	$(MAKE) -C gtkextra mostlyclean
	$(MAKE) -C opengl mostlyclean

maintainer-clean: mostlyclean-generic
	$(MAKE) -C gtkextra maintainer-clean
	$(MAKE) -C opengl maintainer-clean

## Building the C files: they all depend on the c file in the source directory
## The dependencies on the .h files have to be given explicitly

$(c_objects): $(LIB_DIR)/%.o : %.c
	$(CD) $(LIB_DIR); $(CC) -c $(CFLAGS) ../$<

force:

